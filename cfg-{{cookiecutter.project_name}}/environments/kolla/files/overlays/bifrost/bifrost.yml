---
# Ironic log directory.
ironic_log_dir: "/var/log/kolla/ironic"

# Ironic inspector log directory.
inspector_log_dir: "/var/log/kolla/ironic-inspector"
inspector_debug: false

# Nginx log directory.
nginx_log_dir: "/var/log/kolla/nginx"

ansible_python_interpreter: /var/lib/kolla/venv/bin/python
network_interface: "{{ bifrost_network_interface }}"

# Ironic creates hardlinks between the TFTP master image store and the
# HTTP root path when iPXE is enabled. With Docker volumes used for these
# locations we run into https://bugs.launchpad.net/ironic/+bug/1507894
# during deployment. If we use a directory under /httpboot to store the
# master images this issue is avoided.
ironic_tftp_master_path: "/httpboot/master_images"

# define types and interfaces
enabled_hardware_types:        ipmi,    redfish,ilo,ilo5
enabled_power_interfaces:      ipmitool,redfish,ilo,     fake
enabled_management_interfaces: ipmitool,redfish,ilo,ilo5,noop

enable_tls: false

# Create IPA image via DIB (disk image builder)
create_ipa_image: false

# Download CentOS 8 Stream IPA image
download_ipa: true
use_tinyipa: false
ipa_upstream_release: stable-{{ openstack_release }}

# Deploy image
use_cirros: true
#cirros_deploy_image_upstream_url: https://github.com/cirros-dev/cirros/releases/download/0.5.1/cirros-0.5.1-x86_64-disk.img
#cirros_deploy_image_upstream_url: https://minio.services.osism.tech/openstack-ironic-images/ubuntu-20.04-amd64-efi.gz
cirros_deploy_image_upstream_url: file:///etc/bifrost/ubuntu-ironic.qcow2
# file:///etc/bifrost/osism-deploy.qcow2 results in /etc/kolla/bifrost/ directory on manager

inventory_dhcp: true
dhcp_pool_start: X.X.X.X
dhcp_pool_end: X.X.X.X
dnsmasq_dns_servers: X.X.X.X
dnsmasq_router: X.X.X.X
domain: osism.testbed

# default_boot_mode: uefi
